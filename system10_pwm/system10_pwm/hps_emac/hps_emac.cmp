	component hps_emac is
		port (
			read               : in  std_logic                     := 'X';             -- read
			write              : in  std_logic                     := 'X';             -- write
			writedata          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			readdata           : out std_logic_vector(31 downto 0);                    -- readdata
			addr               : in  std_logic                     := 'X';             -- address
			phy_txd_o          : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- phy_txd_o
			phy_txen_o         : in  std_logic                     := 'X';             -- phy_txen_o
			phy_txer_o         : in  std_logic                     := 'X';             -- phy_txer_o
			mdo_o              : in  std_logic                     := 'X';             -- gmii_mdo_o
			mdo_o_e            : in  std_logic                     := 'X';             -- gmii_mdo_o_e
			ptp_pps_o          : in  std_logic                     := 'X';             -- ptp_pps_o
			phy_rxdv_i         : out std_logic;                                        -- phy_rxdv_i
			phy_rxer_i         : out std_logic;                                        -- phy_rxer_i
			phy_rxd_i          : out std_logic_vector(7 downto 0);                     -- phy_rxd_i
			phy_col_i          : out std_logic;                                        -- phy_col_i
			phy_crs_i          : out std_logic;                                        -- phy_crs_i
			mdi_i              : out std_logic;                                        -- gmii_mdi_i
			ptp_aux_ts_trig_i  : out std_logic;                                        -- ptp_aux_ts_trig_i
			phy_txclk_o        : in  std_logic                     := 'X';             -- clk
			clk_rx_i           : out std_logic;                                        -- clk
			rst_rx_n_o         : in  std_logic                     := 'X';             -- reset_n
			clk_tx_i           : out std_logic;                                        -- clk
			rst_tx_n_o         : in  std_logic                     := 'X';             -- reset_n
			mac_tx_clk_i       : in  std_logic                     := 'X';             -- phy_tx_clk_i
			mac_rx_clk         : in  std_logic                     := 'X';             -- phy_rx_clk_i
			mac_rxdv           : in  std_logic                     := 'X';             -- phy_rxdv_i
			mac_rxer           : in  std_logic                     := 'X';             -- phy_rxer_i
			mac_rxd            : in  std_logic_vector(7 downto 0)  := (others => 'X'); -- phy_rxd_i
			mac_col            : in  std_logic                     := 'X';             -- phy_col_i
			mac_crs            : in  std_logic                     := 'X';             -- phy_crs_i
			mac_tx_clk_o       : out std_logic;                                        -- phy_tx_clk_o
			mac_rst_tx_n       : out std_logic;                                        -- rst_tx_n
			mac_rst_rx_n       : out std_logic;                                        -- rst_rx_n
			mac_txd            : out std_logic_vector(7 downto 0);                     -- phy_txd_o
			mac_txen           : out std_logic;                                        -- phy_txen_o
			mac_txer           : out std_logic;                                        -- phy_txer_o
			mac_speed          : out std_logic_vector(1 downto 0);                     -- phy_mac_speed_o
			mdi_in             : in  std_logic                     := 'X';             -- gmii_mdi_i
			mdo_out            : out std_logic;                                        -- gmii_mdo_o
			mdo_out_en         : out std_logic;                                        -- gmii_mdo_o_e
			clk                : in  std_logic                     := 'X';             -- clk
			rst_n              : in  std_logic                     := 'X';             -- reset_n
			ptp_aux_ts_trig_in : in  std_logic                     := 'X';             -- ptp_aux_ts_trig_i
			ptp_pps_out        : out std_logic                                         -- ptp_pps_o
		);
	end component hps_emac;

