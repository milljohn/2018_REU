// hps_gmii_gmii_to_rgmii_adapter_0.v

// This file was auto-generated from altera_gmii_to_rgmii_adapter_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 17.0 595

`timescale 1 ps / 1 ps
module hps_gmii_gmii_to_rgmii_adapter_0 #(
		parameter TX_PIPELINE_DEPTH = 2,
		parameter RX_PIPELINE_DEPTH = 2
	) (
		input  wire       peri_clock_clk,           //     peri_clock.clk
		input  wire       peri_reset_reset_n,       //     peri_reset.reset_n
		input  wire       hps_gmii_phy_tx_clk_o,    //       hps_gmii.phy_tx_clk_o
		input  wire       hps_gmii_rst_tx_n,        //               .rst_tx_n
		input  wire       hps_gmii_rst_rx_n,        //               .rst_rx_n
		input  wire [7:0] hps_gmii_phy_txd_o,       //               .phy_txd_o
		input  wire       hps_gmii_phy_txen_o,      //               .phy_txen_o
		input  wire       hps_gmii_phy_txer_o,      //               .phy_txer_o
		input  wire [1:0] hps_gmii_phy_mac_speed_o, //               .phy_mac_speed_o
		output wire       hps_gmii_phy_tx_clk_i,    //               .phy_tx_clk_i
		output wire       hps_gmii_phy_rx_clk_i,    //               .phy_rx_clk_i
		output wire       hps_gmii_phy_rxdv_i,      //               .phy_rxdv_i
		output wire       hps_gmii_phy_rxer_i,      //               .phy_rxer_i
		output wire [7:0] hps_gmii_phy_rxd_i,       //               .phy_rxd_i
		output wire       hps_gmii_phy_col_i,       //               .phy_col_i
		output wire       hps_gmii_phy_crs_i,       //               .phy_crs_i
		input  wire       phy_rgmii_rgmii_rx_clk,   //      phy_rgmii.rgmii_rx_clk
		input  wire [3:0] phy_rgmii_rgmii_rxd,      //               .rgmii_rxd
		input  wire       phy_rgmii_rgmii_rx_ctl,   //               .rgmii_rx_ctl
		output wire       phy_rgmii_rgmii_tx_clk,   //               .rgmii_tx_clk
		output wire [3:0] phy_rgmii_rgmii_txd,      //               .rgmii_txd
		output wire       phy_rgmii_rgmii_tx_ctl,   //               .rgmii_tx_ctl
		input  wire       pll_25m_clock_clk,        //  pll_25m_clock.clk
		input  wire       pll_2_5m_clock_clk        // pll_2_5m_clock.clk
	);

	generate
		// If any of the display statements (or deliberately broken
		// instantiations) within this generate block triggers then this module
		// has been instantiated this module with a set of parameters different
		// from those it was generated for.  This will usually result in a
		// non-functioning system.
		if (TX_PIPELINE_DEPTH != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					tx_pipeline_depth_check ( .error(1'b1) );
		end
		if (RX_PIPELINE_DEPTH != 2)
		begin
			initial begin
				$display("Generated module instantiated with wrong parameters");
				$stop;
			end
			instantiated_with_wrong_parameters_error_see_comment_above
					rx_pipeline_depth_check ( .error(1'b1) );
		end
	endgenerate

	altera_gmii_to_rgmii_adapter #(
		.TX_PIPELINE_DEPTH (2),
		.RX_PIPELINE_DEPTH (2),
		.USE_ALTGPIO       (0)
	) u_altera_gmii_to_rgmii_adapter_core (
		.clk             (peri_clock_clk),           //     peri_clock.clk
		.rst_n           (peri_reset_reset_n),       //     peri_reset.reset_n
		.mac_tx_clk_o    (hps_gmii_phy_tx_clk_o),    //       hps_gmii.phy_tx_clk_o
		.mac_rst_tx_n    (hps_gmii_rst_tx_n),        //               .rst_tx_n
		.mac_rst_rx_n    (hps_gmii_rst_rx_n),        //               .rst_rx_n
		.mac_txd         (hps_gmii_phy_txd_o),       //               .phy_txd_o
		.mac_txen        (hps_gmii_phy_txen_o),      //               .phy_txen_o
		.mac_txer        (hps_gmii_phy_txer_o),      //               .phy_txer_o
		.mac_speed       (hps_gmii_phy_mac_speed_o), //               .phy_mac_speed_o
		.mac_tx_clk_i    (hps_gmii_phy_tx_clk_i),    //               .phy_tx_clk_i
		.mac_rx_clk      (hps_gmii_phy_rx_clk_i),    //               .phy_rx_clk_i
		.mac_rxdv        (hps_gmii_phy_rxdv_i),      //               .phy_rxdv_i
		.mac_rxer        (hps_gmii_phy_rxer_i),      //               .phy_rxer_i
		.mac_rxd         (hps_gmii_phy_rxd_i),       //               .phy_rxd_i
		.mac_col         (hps_gmii_phy_col_i),       //               .phy_col_i
		.mac_crs         (hps_gmii_phy_crs_i),       //               .phy_crs_i
		.rgmii_rx_clk    (phy_rgmii_rgmii_rx_clk),   //      phy_rgmii.rgmii_rx_clk
		.rgmii_rxd       (phy_rgmii_rgmii_rxd),      //               .rgmii_rxd
		.rgmii_rx_ctl    (phy_rgmii_rgmii_rx_ctl),   //               .rgmii_rx_ctl
		.rgmii_tx_clk    (phy_rgmii_rgmii_tx_clk),   //               .rgmii_tx_clk
		.rgmii_txd       (phy_rgmii_rgmii_txd),      //               .rgmii_txd
		.rgmii_tx_ctl    (phy_rgmii_rgmii_tx_ctl),   //               .rgmii_tx_ctl
		.pll_25m_clk     (pll_25m_clock_clk),        //  pll_25m_clock.clk
		.pll_2_5m_clk    (pll_2_5m_clock_clk),       // pll_2_5m_clock.clk
		.rgmii_out4_pad  (4'b0000),                  //    (terminated)
		.rgmii_out1_pad  (1'b0),                     //    (terminated)
		.rgmii_in4_dout  (8'b00000000),              //    (terminated)
		.rgmii_in1_dout  (2'b00),                    //    (terminated)
		.rgmii_out4_din  (),                         //    (terminated)
		.rgmii_out4_ck   (),                         //    (terminated)
		.rgmii_out4_aclr (),                         //    (terminated)
		.rgmii_out1_din  (),                         //    (terminated)
		.rgmii_out1_ck   (),                         //    (terminated)
		.rgmii_out1_aclr (),                         //    (terminated)
		.rgmii_in4_pad   (),                         //    (terminated)
		.rgmii_in4_ck    (),                         //    (terminated)
		.rgmii_in1_pad   (),                         //    (terminated)
		.rgmii_in1_ck    ()                          //    (terminated)
	);

endmodule
